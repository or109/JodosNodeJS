{
  "name": "graph-paths",
  "description": "Finding shortest / cheapest paths in a dense graph",
  "version": "0.4.0",
  "author": {
    "name": "Erel Segal-haLevi",
    "email": "erelsgl@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/erelsgl/graph-paths.git"
  },
  "main": "./graph-paths.js",
  "dependencies": {},
  "devDependencies": {},
  "keywords": [
    "graph",
    "paths",
    "matrix"
  ],
  "readme": "_graph-paths_ is a small module for finding cheapest (shortest) paths in a dense graph (network).\n\n## Installation\n\n    $ npm install graph-paths\n\n## Example\n```javascript\nvar cheapest_paths = require('graph-paths').cheapest_paths;\n\n/*\n * The network is defined by a matrix describing the cost of getting from node i to node j.\n * If there is no way from node i to node j, then the cost is infinite.\n */\nvar costs = [\n    [0,1,7,20],\n    [Infinity,0,4,19],\n    [Infinity,Infinity,0,7],\n    [Infinity,Infinity,Infinity,0],\n];\n\nvar cheapest_paths_from_0 = cheapest_paths(costs, 0);\nconsole.log(\"cheapest paths from node #0 to all other nodes:\");\nconsole.dir(cheapest_paths_from_0); \n\nconsole.log(\"cheapest path from node #0 to node #3:\");\nconsole.dir(cheapest_paths_from_0[3].path); \n```\n    ",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/erelsgl/graph-paths/issues"
  },
  "_id": "graph-paths@0.4.0",
  "dist": {
    "shasum": "a1234e82cc189058ccd0b89db225f0841b7d558a",
    "tarball": "http://registry.npmjs.org/graph-paths/-/graph-paths-0.4.0.tgz"
  },
  "_from": "graph-paths@latest",
  "_npmVersion": "1.2.28",
  "_npmUser": {
    "name": "erelsgl",
    "email": "erelsgl@gmail.com"
  },
  "maintainers": [
    {
      "name": "erelsgl",
      "email": "erelsgl@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "a1234e82cc189058ccd0b89db225f0841b7d558a",
  "_resolved": "https://registry.npmjs.org/graph-paths/-/graph-paths-0.4.0.tgz"
}
